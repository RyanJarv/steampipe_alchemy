from sqlalchemy import Column
from sqlalchemy.types import JSON, Text, Boolean, TIMESTAMP, BigInteger
from sqlalchemy.dialects import postgresql as psql

from steampipe_alchemy.base import Base

class AwsEc2ClassicLoadBalancer(Base):
    __tablename__ = 'aws_ec2_classic_load_balancer'
    name = Column(Text, name='name', primary_key=True, nullable=True)
    scheme = Column(Text, name='scheme', nullable=True)
    created_time = Column(TIMESTAMP, name='created_time', nullable=True)
    vpc_id = Column(Text, name='vpc_id', nullable=True)
    access_log_emit_interval = Column(BigInteger, name='access_log_emit_interval', nullable=True)
    access_log_enabled = Column(Boolean, name='access_log_enabled', nullable=True)
    access_log_s3_bucket_name = Column(Text, name='access_log_s3_bucket_name', nullable=True)
    access_log_s3_bucket_prefix = Column(Text, name='access_log_s3_bucket_prefix', nullable=True)
    canonical_hosted_zone_name = Column(Text, name='canonical_hosted_zone_name', nullable=True)
    canonical_hosted_zone_name_id = Column(Text, name='canonical_hosted_zone_name_id', nullable=True)
    connection_draining_enabled = Column(Boolean, name='connection_draining_enabled', nullable=True)
    connection_draining_timeout = Column(BigInteger, name='connection_draining_timeout', nullable=True)
    connection_settings_idle_timeout = Column(BigInteger, name='connection_settings_idle_timeout', nullable=True)
    cross_zone_load_balancing_enabled = Column(Boolean, name='cross_zone_load_balancing_enabled', nullable=True)
    dns_name = Column(Text, name='dns_name', nullable=True)
    health_check_interval = Column(BigInteger, name='health_check_interval', nullable=True)
    health_check_timeout = Column(BigInteger, name='health_check_timeout', nullable=True)
    healthy_threshold = Column(BigInteger, name='healthy_threshold', nullable=True)
    heath_check_target = Column(Text, name='heath_check_target', nullable=True)
    source_security_group_name = Column(Text, name='source_security_group_name', nullable=True)
    source_security_group_owner_alias = Column(Text, name='source_security_group_owner_alias', nullable=True)
    unhealthy_threshold = Column(BigInteger, name='unhealthy_threshold', nullable=True)
    additional_attributes = Column(JSON, name='additional_attributes', nullable=True)
    app_cookie_stickiness_policies = Column(JSON, name='app_cookie_stickiness_policies', nullable=True)
    availability_zones = Column(JSON, name='availability_zones', nullable=True)
    backend_server_descriptions = Column(JSON, name='backend_server_descriptions', nullable=True)
    instances = Column(JSON, name='instances', nullable=True)
    lb_cookie_stickiness_policies = Column(JSON, name='lb_cookie_stickiness_policies', nullable=True)
    listener_descriptions = Column(JSON, name='listener_descriptions', nullable=True)
    other_policies = Column(JSON, name='other_policies', nullable=True)
    security_groups = Column(JSON, name='security_groups', nullable=True)
    subnets = Column(JSON, name='subnets', nullable=True)
    tags_src = Column(JSON, name='tags_src', nullable=True)
    tags = Column(JSON, name='tags', nullable=True)
    title = Column(Text, name='title', nullable=True)
    akas = Column(JSON, name='akas', nullable=True)
    partition = Column(Text, name='partition', nullable=True)
    region = Column(Text, name='region', nullable=True)
    account_id = Column(Text, name='account_id', nullable=True)