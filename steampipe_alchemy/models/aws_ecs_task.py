from sqlalchemy import Column
from sqlalchemy.types import JSON, Text, Boolean, TIMESTAMP, BigInteger
from sqlalchemy.dialects import postgresql as psql
from steampipe_alchemy.mixins import FormatMixins

from steampipe_alchemy import Base

class AwsEcsTask(Base, FormatMixins):
    __tablename__ = 'aws_ecs_task'
    cpu = Column('cpu', BigInteger, nullable=True)
    stopped_at = Column('stopped_at', TIMESTAMP, nullable=True)
    created_at = Column('created_at', TIMESTAMP, nullable=True)
    stopping_at = Column('stopping_at', TIMESTAMP, nullable=True)
    memory = Column('memory', BigInteger, nullable=True)
    version = Column('version', BigInteger, nullable=True)
    attachments = Column('attachments', JSON, nullable=True)
    attributes = Column('attributes', JSON, nullable=True)
    containers = Column('containers', JSON, nullable=True)
    ephemeral_storage = Column('ephemeral_storage', JSON, nullable=True)
    inference_accelerators = Column('inference_accelerators', JSON, nullable=True)
    overrides = Column('overrides', JSON, nullable=True)
    protection = Column('protection', JSON, nullable=True)
    tags_src = Column('tags_src', JSON, nullable=True)
    tags = Column('tags', JSON, nullable=True)
    akas = Column('akas', JSON, nullable=True)
    enable_execute_command = Column('enable_execute_command', Boolean, nullable=True)
    pull_started_at = Column('pull_started_at', TIMESTAMP, nullable=True)
    pull_stopped_at = Column('pull_stopped_at', TIMESTAMP, nullable=True)
    execution_stopped_at = Column('execution_stopped_at', TIMESTAMP, nullable=True)
    sp_ctx = Column('sp_ctx', JSON, nullable=True)
    _ctx = Column('_ctx', JSON, nullable=True)
    started_at = Column('started_at', TIMESTAMP, nullable=True)
    connectivity_at = Column('connectivity_at', TIMESTAMP, nullable=True)
    task_definition_arn = Column('task_definition_arn', Text, nullable=True)
    container_instance_arn = Column('container_instance_arn', Text, nullable=True)
    cluster_name = Column('cluster_name', Text, nullable=True)
    desired_status = Column('desired_status', Text, nullable=True)
    launch_type = Column('launch_type', Text, nullable=True)
    availability_zone = Column('availability_zone', Text, nullable=True)
    capacity_provider_name = Column('capacity_provider_name', Text, nullable=True)
    cluster_arn = Column('cluster_arn', Text, nullable=True)
    connectivity = Column('connectivity', Text, nullable=True)
    group = Column('group', Text, nullable=True)
    health_status = Column('health_status', Text, nullable=True)
    last_status = Column('last_status', Text, nullable=True)
    platform_version = Column('platform_version', Text, nullable=True)
    service_name = Column('service_name', Text, nullable=True)
    started_by = Column('started_by', Text, nullable=True)
    stop_code = Column('stop_code', Text, nullable=True)
    stopped_reason = Column('stopped_reason', Text, nullable=True)
    task_arn = Column('task_arn', Text, primary_key=True, nullable=True)
    partition = Column('partition', Text, nullable=True)
    region = Column('region', Text, nullable=True)
    account_id = Column('account_id', Text, nullable=True)
    sp_connection_name = Column('sp_connection_name', Text, nullable=True)