from sqlalchemy import Column
from sqlalchemy.types import JSON, Text, Boolean, TIMESTAMP, BigInteger
from sqlalchemy.dialects import postgresql as psql

from steampipe_alchemy.base import Base

class AwsRdsDbInstance(Base):
    __tablename__ = 'aws_rds_db_instance'
    db_instance_identifier = Column(Text, name='db_instance_identifier', nullable=True)
    arn = Column(Text, name='arn', primary_key=True, nullable=True)
    db_cluster_identifier = Column(Text, name='db_cluster_identifier', nullable=True)
    status = Column(Text, name='status', nullable=True)
    _class = Column(Text, name='class', nullable=True)
    resource_id = Column(Text, name='resource_id', nullable=True)
    allocated_storage = Column(BigInteger, name='allocated_storage', nullable=True)
    auto_minor_version_upgrade = Column(Boolean, name='auto_minor_version_upgrade', nullable=True)
    availability_zone = Column(Text, name='availability_zone', nullable=True)
    backup_retention_period = Column(BigInteger, name='backup_retention_period', nullable=True)
    ca_certificate_identifier = Column(Text, name='ca_certificate_identifier', nullable=True)
    character_set_name = Column(Text, name='character_set_name', nullable=True)
    copy_tags_to_snapshot = Column(Boolean, name='copy_tags_to_snapshot', nullable=True)
    customer_owned_ip_enabled = Column(Boolean, name='customer_owned_ip_enabled', nullable=True)
    port = Column(BigInteger, name='port', nullable=True)
    db_name = Column(Text, name='db_name', nullable=True)
    db_subnet_group_arn = Column(Text, name='db_subnet_group_arn', nullable=True)
    db_subnet_group_description = Column(Text, name='db_subnet_group_description', nullable=True)
    db_subnet_group_name = Column(Text, name='db_subnet_group_name', nullable=True)
    db_subnet_group_status = Column(Text, name='db_subnet_group_status', nullable=True)
    deletion_protection = Column(Boolean, name='deletion_protection', nullable=True)
    endpoint_address = Column(Text, name='endpoint_address', nullable=True)
    endpoint_hosted_zone_id = Column(Text, name='endpoint_hosted_zone_id', nullable=True)
    endpoint_port = Column(BigInteger, name='endpoint_port', nullable=True)
    engine = Column(Text, name='engine', nullable=True)
    engine_version = Column(Text, name='engine_version', nullable=True)
    enhanced_monitoring_resource_arn = Column(Text, name='enhanced_monitoring_resource_arn', nullable=True)
    iam_database_authentication_enabled = Column(Boolean, name='iam_database_authentication_enabled', nullable=True)
    create_time = Column(TIMESTAMP, name='create_time', nullable=True)
    iops = Column(BigInteger, name='iops', nullable=True)
    kms_key_id = Column(Text, name='kms_key_id', nullable=True)
    latest_restorable_time = Column(TIMESTAMP, name='latest_restorable_time', nullable=True)
    license_model = Column(Text, name='license_model', nullable=True)
    master_user_name = Column(Text, name='master_user_name', nullable=True)
    max_allocated_storage = Column(BigInteger, name='max_allocated_storage', nullable=True)
    monitoring_interval = Column(BigInteger, name='monitoring_interval', nullable=True)
    monitoring_role_arn = Column(Text, name='monitoring_role_arn', nullable=True)
    multi_az = Column(Boolean, name='multi_az', nullable=True)
    nchar_character_set_name = Column(Text, name='nchar_character_set_name', nullable=True)
    performance_insights_enabled = Column(Boolean, name='performance_insights_enabled', nullable=True)
    performance_insights_kms_key_id = Column(Text, name='performance_insights_kms_key_id', nullable=True)
    performance_insights_retention_period = Column(BigInteger, name='performance_insights_retention_period', nullable=True)
    preferred_backup_window = Column(Text, name='preferred_backup_window', nullable=True)
    preferred_maintenance_window = Column(Text, name='preferred_maintenance_window', nullable=True)
    promotion_tier = Column(BigInteger, name='promotion_tier', nullable=True)
    publicly_accessible = Column(Boolean, name='publicly_accessible', nullable=True)
    read_replica_source_db_instance_identifier = Column(Text, name='read_replica_source_db_instance_identifier', nullable=True)
    replica_mode = Column(Text, name='replica_mode', nullable=True)
    secondary_availability_zone = Column(Text, name='secondary_availability_zone', nullable=True)
    storage_encrypted = Column(Boolean, name='storage_encrypted', nullable=True)
    storage_type = Column(Text, name='storage_type', nullable=True)
    tde_credential_arn = Column(Text, name='tde_credential_arn', nullable=True)
    timezone = Column(Text, name='timezone', nullable=True)
    vpc_id = Column(Text, name='vpc_id', nullable=True)
    associated_roles = Column(JSON, name='associated_roles', nullable=True)
    db_parameter_groups = Column(JSON, name='db_parameter_groups', nullable=True)
    db_security_groups = Column(JSON, name='db_security_groups', nullable=True)
    domain_memberships = Column(JSON, name='domain_memberships', nullable=True)
    enabled_cloudwatch_logs_exports = Column(JSON, name='enabled_cloudwatch_logs_exports', nullable=True)
    option_group_memberships = Column(JSON, name='option_group_memberships', nullable=True)
    processor_features = Column(JSON, name='processor_features', nullable=True)
    read_replica_db_cluster_identifiers = Column(JSON, name='read_replica_db_cluster_identifiers', nullable=True)
    read_replica_db_instance_identifiers = Column(JSON, name='read_replica_db_instance_identifiers', nullable=True)
    status_infos = Column(JSON, name='status_infos', nullable=True)
    subnets = Column(JSON, name='subnets', nullable=True)
    vpc_security_groups = Column(JSON, name='vpc_security_groups', nullable=True)
    tags_src = Column(JSON, name='tags_src', nullable=True)
    tags = Column(JSON, name='tags', nullable=True)
    title = Column(Text, name='title', nullable=True)
    akas = Column(JSON, name='akas', nullable=True)
    partition = Column(Text, name='partition', nullable=True)
    region = Column(Text, name='region', nullable=True)
    account_id = Column(Text, name='account_id', nullable=True)