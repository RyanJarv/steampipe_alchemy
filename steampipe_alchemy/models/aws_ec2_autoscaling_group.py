from sqlalchemy import Column
from sqlalchemy.types import JSON, Text, Boolean, TIMESTAMP, BigInteger
from sqlalchemy.dialects import postgresql as psql

from steampipe_alchemy.base import Base

class AwsEc2AutoscalingGroup(Base):
    __tablename__ = 'aws_ec2_autoscaling_group'
    name = Column(Text, name='name', primary_key=True, nullable=True)
    autoscaling_group_arn = Column(Text, name='autoscaling_group_arn', nullable=True)
    status = Column(Text, name='status', nullable=True)
    created_time = Column(TIMESTAMP, name='created_time', nullable=True)
    new_instances_protected_from_scale_in = Column(Boolean, name='new_instances_protected_from_scale_in', nullable=True)
    launch_configuration_name = Column(Text, name='launch_configuration_name', nullable=True)
    default_cooldown = Column(BigInteger, name='default_cooldown', nullable=True)
    desired_capacity = Column(BigInteger, name='desired_capacity', nullable=True)
    max_instance_lifetime = Column(BigInteger, name='max_instance_lifetime', nullable=True)
    max_size = Column(BigInteger, name='max_size', nullable=True)
    min_size = Column(BigInteger, name='min_size', nullable=True)
    health_check_grace_period = Column(BigInteger, name='health_check_grace_period', nullable=True)
    health_check_type = Column(Text, name='health_check_type', nullable=True)
    placement_group = Column(Text, name='placement_group', nullable=True)
    service_linked_role_arn = Column(Text, name='service_linked_role_arn', nullable=True)
    vpc_zone_identifier = Column(Text, name='vpc_zone_identifier', nullable=True)
    launch_template_name = Column(Text, name='launch_template_name', nullable=True)
    launch_template_id = Column(Text, name='launch_template_id', nullable=True)
    launch_template_version = Column(Text, name='launch_template_version', nullable=True)
    on_demand_allocation_strategy = Column(Text, name='on_demand_allocation_strategy', nullable=True)
    on_demand_base_capacity = Column(BigInteger, name='on_demand_base_capacity', nullable=True)
    on_demand_percentage_above_base_capacity = Column(BigInteger, name='on_demand_percentage_above_base_capacity', nullable=True)
    spot_allocation_strategy = Column(Text, name='spot_allocation_strategy', nullable=True)
    spot_instance_pools = Column(BigInteger, name='spot_instance_pools', nullable=True)
    spot_max_price = Column(Text, name='spot_max_price', nullable=True)
    mixed_instances_policy_launch_template_name = Column(Text, name='mixed_instances_policy_launch_template_name', nullable=True)
    mixed_instances_policy_launch_template_id = Column(Text, name='mixed_instances_policy_launch_template_id', nullable=True)
    mixed_instances_policy_launch_template_version = Column(Text, name='mixed_instances_policy_launch_template_version', nullable=True)
    mixed_instances_policy_launch_template_overrides = Column(JSON, name='mixed_instances_policy_launch_template_overrides', nullable=True)
    availability_zones = Column(JSON, name='availability_zones', nullable=True)
    load_balancer_names = Column(JSON, name='load_balancer_names', nullable=True)
    target_group_arns = Column(JSON, name='target_group_arns', nullable=True)
    instances = Column(JSON, name='instances', nullable=True)
    enabled_metrics = Column(JSON, name='enabled_metrics', nullable=True)
    policies = Column(JSON, name='policies', nullable=True)
    termination_policies = Column(JSON, name='termination_policies', nullable=True)
    suspended_processes = Column(JSON, name='suspended_processes', nullable=True)
    tags_src = Column(JSON, name='tags_src', nullable=True)
    tags = Column(JSON, name='tags', nullable=True)
    title = Column(Text, name='title', nullable=True)
    akas = Column(JSON, name='akas', nullable=True)
    partition = Column(Text, name='partition', nullable=True)
    region = Column(Text, name='region', nullable=True)
    account_id = Column(Text, name='account_id', nullable=True)